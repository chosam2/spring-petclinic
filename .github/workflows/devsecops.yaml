name: DevSecOps Pipeline for Spring Petclinic
run-name: ${{ github.actor }} is running DevSecOps pipeline for Spring Petclinic

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: chosam2/petclinic
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and Push Docker Image
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          ./gradlew bootBuildImage -x test --imageName=$IMAGE_NAME:${{ github.sha }}
          echo $DOCKER_PASSWORD | docker login $REGISTRY -u $DOCKER_USER --password-stdin
          docker push $IMAGE_NAME:${{ github.sha }}
          
  scan:
    needs: build-and-push
    runs-on: ubuntu-20.04
    steps:
      - name: Pull Docker Image
        run: |
          docker pull ${{ env.IMAGE_NAME }}:${{ github.sha }}
          
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_NAME }}:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'
          
  zap-scan:
    needs: build-and-push
    runs-on: ubuntu-20.04
    steps:        
      - name: Run Spring Boot application
        run: |
          docker run -d -p 8080:8080 --name petclinic ${{ env.IMAGE_NAME }}:${{ github.sha }}
          
      - name: Run OWASP ZAP full scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: "http://localhost:8080"
          
      - name: Evaluate ZAP Results
        id: zap-results
        run: |
          high_alerts=$(grep -c "high:" zap_report.html)
          if (( $high_alerts > 5 )); then
            echo "::error::ZAP scan failed - high alerts exceed threshold" 
            exit 1
          fi
          
  deploy:
    runs-on: ubuntu-20.04
    needs: [scan, zap-scan]  
    steps:
      - name: Deploy to production 
        run: |
          # Add deployment steps here  
          echo "Deploying Spring Petclinic application to production"
